\hypertarget{gateway_8c}{}\section{gateway.\+c File Reference}
\label{gateway_8c}\index{gateway.\+c@{gateway.\+c}}
{\ttfamily \#include $<$sys/types.\+h$>$}\\*
{\ttfamily \#include $<$sys/stat.\+h$>$}\\*
{\ttfamily \#include $<$fcntl.\+h$>$}\\*
{\ttfamily \#include $<$sys/socket.\+h$>$}\\*
{\ttfamily \#include $<$sys/un.\+h$>$}\\*
{\ttfamily \#include $<$stdio.\+h$>$}\\*
{\ttfamily \#include $<$stdlib.\+h$>$}\\*
{\ttfamily \#include $<$string.\+h$>$}\\*
{\ttfamily \#include $<$signal.\+h$>$}\\*
{\ttfamily \#include $<$unistd.\+h$>$}\\*
{\ttfamily \#include $<$arpa/inet.\+h$>$}\\*
{\ttfamily \#include $<$ctype.\+h$>$}\\*
{\ttfamily \#include $<$pthread.\+h$>$}\\*
{\ttfamily \#include \char`\"{}messages.\+h\char`\"{}}\\*
{\ttfamily \#include \char`\"{}serverlist.\+h\char`\"{}}\\*
Include dependency graph for gateway.\+c\+:
% FIG 0
\subsection*{Macros}
\begin{DoxyCompactItemize}
\item 
\#define \hyperlink{gateway_8c_a8cde93956b0a6cdc09e950e898404f6b}{C\+L\+I\+E\+N\+T\+\_\+\+S\+I\+D\+E\+\_\+\+P\+O\+RT}~3000\hypertarget{gateway_8c_a8cde93956b0a6cdc09e950e898404f6b}{}\label{gateway_8c_a8cde93956b0a6cdc09e950e898404f6b}

\begin{DoxyCompactList}\small\item\em Client side port. \end{DoxyCompactList}\item 
\#define \hyperlink{gateway_8c_ac8386a4e0f05dbb64e8e6e6e1498b5fd}{P\+E\+E\+R\+\_\+\+S\+I\+D\+E\+\_\+\+P\+O\+RT}~3001\hypertarget{gateway_8c_ac8386a4e0f05dbb64e8e6e6e1498b5fd}{}\label{gateway_8c_ac8386a4e0f05dbb64e8e6e6e1498b5fd}

\begin{DoxyCompactList}\small\item\em Peer side port. \end{DoxyCompactList}\end{DoxyCompactItemize}
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \hyperlink{gateway_8c_a64356d4283379d857aa5b7188e031083}{sigint\+\_\+handler} (int n)
\begin{DoxyCompactList}\small\item\em Signal to close the {\itshape gateway}. \end{DoxyCompactList}\item 
int \hyperlink{gateway_8c_a1e8c8af2170e82a6b32a3ddc2ef2f746}{check\+\_\+and\+\_\+update\+\_\+peer} (\hyperlink{structmessage__gw}{message\+\_\+gw} $\ast$gw\+\_\+msg, pthread\+\_\+mutex\+\_\+t $\ast$list\+\_\+key)
\begin{DoxyCompactList}\small\item\em Attempt to connect to server and confirm if it is dead. \end{DoxyCompactList}\item 
void $\ast$ \hyperlink{gateway_8c_a1271de9262b27c9bb6de88115695036c}{c\+\_\+interact} (void $\ast$list\+\_\+key)
\begin{DoxyCompactList}\small\item\em Thread that interacts with client requests, receives socket descriptor. \end{DoxyCompactList}\item 
void $\ast$ \hyperlink{gateway_8c_aafda9a7f45d7049d8b5a64e8ec513f88}{p\+\_\+interact} (void $\ast$list\+\_\+key)
\begin{DoxyCompactList}\small\item\em Thread that interacts with peer requests, receives socket descriptor. \end{DoxyCompactList}\item 
int {\bfseries main} ()\hypertarget{gateway_8c_ae66f6b31b5ad750f1fe042a706a4e3d4}{}\label{gateway_8c_ae66f6b31b5ad750f1fe042a706a4e3d4}

\end{DoxyCompactItemize}
\subsection*{Variables}
\begin{DoxyCompactItemize}
\item 
int \hyperlink{gateway_8c_aecd587c4be6cba0dd6af4ea0b4d9c183}{run} = 1\hypertarget{gateway_8c_aecd587c4be6cba0dd6af4ea0b4d9c183}{}\label{gateway_8c_aecd587c4be6cba0dd6af4ea0b4d9c183}

\begin{DoxyCompactList}\small\item\em Não Utilizada? \end{DoxyCompactList}\item 
int \hyperlink{gateway_8c_aa462bab367c8aac56ebc986ad8f4e30c}{sc}\hypertarget{gateway_8c_aa462bab367c8aac56ebc986ad8f4e30c}{}\label{gateway_8c_aa462bab367c8aac56ebc986ad8f4e30c}

\begin{DoxyCompactList}\small\item\em Client side socket descriptor. \end{DoxyCompactList}\item 
int \hyperlink{gateway_8c_a024603cda52d9847e8d8df3c2e884b8c}{sp}\hypertarget{gateway_8c_a024603cda52d9847e8d8df3c2e884b8c}{}\label{gateway_8c_a024603cda52d9847e8d8df3c2e884b8c}

\begin{DoxyCompactList}\small\item\em Server side socket descriptor. \end{DoxyCompactList}\item 
\hyperlink{structnode}{serverlist} $\ast$ \hyperlink{gateway_8c_abbd8b8a6e8b97287cd10aabd1cd72ad4}{servers}\hypertarget{gateway_8c_abbd8b8a6e8b97287cd10aabd1cd72ad4}{}\label{gateway_8c_abbd8b8a6e8b97287cd10aabd1cd72ad4}

\begin{DoxyCompactList}\small\item\em Linked list of servers. \end{DoxyCompactList}\item 
int \hyperlink{gateway_8c_af180e926633cde08a05ccbc3af397ee4}{ID}\hypertarget{gateway_8c_af180e926633cde08a05ccbc3af397ee4}{}\label{gateway_8c_af180e926633cde08a05ccbc3af397ee4}

\begin{DoxyCompactList}\small\item\em Server ID counter. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Function Documentation}
\index{gateway.\+c@{gateway.\+c}!c\+\_\+interact@{c\+\_\+interact}}
\index{c\+\_\+interact@{c\+\_\+interact}!gateway.\+c@{gateway.\+c}}
\subsubsection[{\texorpdfstring{c\+\_\+interact(void $\ast$list\+\_\+key)}{c_interact(void *list_key)}}]{\setlength{\rightskip}{0pt plus 5cm}void $\ast$ c\+\_\+interact (
\begin{DoxyParamCaption}
\item[{void $\ast$}]{list\+\_\+key}
\end{DoxyParamCaption}
)}\hypertarget{gateway_8c_a1271de9262b27c9bb6de88115695036c}{}\label{gateway_8c_a1271de9262b27c9bb6de88115695036c}


Thread that interacts with client requests, receives socket descriptor. 


\begin{DoxyParams}{Parameters}
{\em list\+\_\+key} & \\
\hline
\end{DoxyParams}
\index{gateway.\+c@{gateway.\+c}!check\+\_\+and\+\_\+update\+\_\+peer@{check\+\_\+and\+\_\+update\+\_\+peer}}
\index{check\+\_\+and\+\_\+update\+\_\+peer@{check\+\_\+and\+\_\+update\+\_\+peer}!gateway.\+c@{gateway.\+c}}
\subsubsection[{\texorpdfstring{check\+\_\+and\+\_\+update\+\_\+peer(message\+\_\+gw $\ast$gw\+\_\+msg, pthread\+\_\+mutex\+\_\+t $\ast$list\+\_\+key)}{check_and_update_peer(message_gw *gw_msg, pthread_mutex_t *list_key)}}]{\setlength{\rightskip}{0pt plus 5cm}check\+\_\+and\+\_\+update\+\_\+peer (
\begin{DoxyParamCaption}
\item[{{\bf message\+\_\+gw} $\ast$}]{gw\+\_\+msg, }
\item[{pthread\+\_\+mutex\+\_\+t $\ast$}]{list\+\_\+key}
\end{DoxyParamCaption}
)}\hypertarget{gateway_8c_a1e8c8af2170e82a6b32a3ddc2ef2f746}{}\label{gateway_8c_a1e8c8af2170e82a6b32a3ddc2ef2f746}


Attempt to connect to server and confirm if it is dead. 


\begin{DoxyParams}{Parameters}
{\em gw\+\_\+msg} & \\
\hline
{\em list\+\_\+key} & \\
\hline
\end{DoxyParams}
\index{gateway.\+c@{gateway.\+c}!p\+\_\+interact@{p\+\_\+interact}}
\index{p\+\_\+interact@{p\+\_\+interact}!gateway.\+c@{gateway.\+c}}
\subsubsection[{\texorpdfstring{p\+\_\+interact(void $\ast$list\+\_\+key)}{p_interact(void *list_key)}}]{\setlength{\rightskip}{0pt plus 5cm}void $\ast$ p\+\_\+interact (
\begin{DoxyParamCaption}
\item[{void $\ast$}]{list\+\_\+key}
\end{DoxyParamCaption}
)}\hypertarget{gateway_8c_aafda9a7f45d7049d8b5a64e8ec513f88}{}\label{gateway_8c_aafda9a7f45d7049d8b5a64e8ec513f88}


Thread that interacts with peer requests, receives socket descriptor. 


\begin{DoxyParams}{Parameters}
{\em list\+\_\+key} & \\
\hline
\end{DoxyParams}
\index{gateway.\+c@{gateway.\+c}!sigint\+\_\+handler@{sigint\+\_\+handler}}
\index{sigint\+\_\+handler@{sigint\+\_\+handler}!gateway.\+c@{gateway.\+c}}
\subsubsection[{\texorpdfstring{sigint\+\_\+handler(int n)}{sigint_handler(int n)}}]{\setlength{\rightskip}{0pt plus 5cm}void sigint\+\_\+handler (
\begin{DoxyParamCaption}
\item[{int}]{n}
\end{DoxyParamCaption}
)}\hypertarget{gateway_8c_a64356d4283379d857aa5b7188e031083}{}\label{gateway_8c_a64356d4283379d857aa5b7188e031083}


Signal to close the {\itshape gateway}. 


\begin{DoxyParams}{Parameters}
{\em n} & P\+A\+KÉ\+I\+S\+TO?. \\
\hline
\end{DoxyParams}
